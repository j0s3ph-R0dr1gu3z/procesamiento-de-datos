library(dplyr)
library(nycflights13)
#Gramatica dplyr
#Joseph rodriguez
#Agosto 2021
install.packages(nycflights13)
install.packages("nycflights13")
library(nycflights13)
library(ggplot2)
sqrt(mean(flights$distance))
flights$distance %>% mean() %>% sqrt()
"Datos/eventos_de_platano.csv" %>% read.csv(stringsAsFactors = 1) %>%summary()
datos_platano <- "Datos/eventos_de_platano.csv" %>% read.csv(stringsAsFactors = T)
datos_platano %>% head()
datos_platano %>% ggplot(aes(x=NO_ARBOLES, y=AREA_UM)) + geom_point() +
theme_bw()
ggsave("Resultados/plot_area_arboles.png")
install.packages("rmarkdown")
test_md
library(markdown)
test_md
#Gramatica dplyr
#Joseph rodriguez
#Agosto 2021
install.packages(nycflights13)
library(dplyr)
library(nycflights13)
library(ggplot2)
sqrt(mean(flights$distance))
flights$distance %>% mean() %>% sqrt()
"Datos/eventos_de_platano.csv" %>% read.csv(stringsAsFactors = 1) %>%summary()
datos_platano <- "Datos/eventos_de_platano.csv" %>% read.csv(stringsAsFactors = T)
datos_platano %>% head()
datos_platano %>% ggplot(aes(x=NO_ARBOLES, y=AREA_UM)) + geom_point() +
theme_bw()
ggsave("Resultados/plot_area_arboles.png")
library(tidyr)
library(dplyr)
library(ggplot2)
#Leer datos cultico utiloizando csv
crop_data <-read.csv2("Datos/Maize_Cordova_Crop.csv")
summary(crop_data)
#Leer datos cultico utiloizando csv
crop_data <-read.csv2("Datos/Maize_Cordova_Crop.csv", stringsAsFactors = T)
summary(crop_data)
crop_data
crop_data <- tibble(crop_data)
crop_data
is(crop_data)
#version transpuesta
glimpse(crop_data)
#filtrar en base a una condicion
crop_data[crop_data$Yield >8,]
crop_data
#filtrar en base a una condicion
crop_data[crop_data$Yield >8,]
crop_data <-read.csv2("Datos/Maize_Cordova_Crop.csv", stringsAsFactors = T)
summary(crop_data)
crop_data
crop_data <- tibble(crop_data)
crop_data
is(crop_data)
#version transpuesta (se parece a str en dataframe)
glimpse(crop_data)
#filtrar en base a una condicion
crop_data[crop_data$Yield > 8 ,]
#filtrar en base a una condicion
crop_data[crop_data$Yield > 8,]
#filtrar en base a una condicion
crop_data[crop_data$Yield>8,]
?filter
filter(crop_data, Yield > 8)
#filtrar en base a una condicion
crop_data[crop_data$Yield<8,]
filter(crop_data, Yield < 8)
#Leer datos cultico utiloizando csv
crop_data <-read.csv2("Datos/Maize_Cordova_Crop.csv")
summary(crop_data)
crop_data
crop_data <- tibble(crop_data)
crop_data
is(crop_data)
#version transpuesta (se parece a str en dataframe)
glimpse(crop_data)
#filtrar en base a una condicion
crop_data[crop_data$Yield>8,]
filter(crop_data, Yield>8)
crop_data%>%filter(Yield >8)
crop_data%>%filter(Yield >8) %>% summary()
#debe ir con doble =
crop_data %>% filter(Yield >8 & Sowing_Method=="Mecanizado")
#debe ir con doble =
crop_data %>% filter(Yield >8 , Sowing_Method=="Mecanizado")
#Ordenar base de datos
crop_data%>% arrange(Yield)
cop_data %>% arrange(desc(Yield))
crop_data %>% arrange(desc(Yield))
#descendiente priorizando otro valor
crop_data %>% arrange(Sowing_Method, desc(Yield))
#Seleccionar algunas de las columnas de tibble
crop_data %>% select(Cultivar,Yield)
head(crop_data)
crop_data %>% select(Cultivar:Yield)
crop_data %>% select(Sowing_Method, Former_Crop, everything())
#cmbiar el nombre d una columna
crop_data %>% select(Sowing_Method, Cultivo_Anterior = Former_Crop, everything())
crop_data %>% rename(Yield = Rendimiento)
crop_data %>% rename(Rendimiento = Yield)
#otra funcion, primero enl nuevo nombre y luego el anterior
crop_data %>% rename(Rendimiento = Yield, Fecha_siembra = Planting_Date)
#cear una nueva columna dentro de la base de datos
crop_data <- crop_data %>% mutate(Dataset = "Maiz_cordoba")
crop_data
crop_data <- crop_data %>% mutate(YieldAvg = mean(Yield))
#Leer datos cultico utiloizando csv
crop_data <-read.csv2("Datos/Maize_Cordova_Crop.csv", stringsAsFactors = T)
summary(crop_data)
crop_data
crop_data <- tibble(crop_data)
crop_data
is(crop_data)
#version transpuesta (se parece a str en dataframe)
glimpse(crop_data)
#filtrar en base a una condicion (filter)
crop_data[crop_data$Yield>8,]
?filter
filter(crop_data, Yield>8)
crop_data%>%filter(Yield >8) %>% summary()
#debe ir con doble =
crop_data %>% filter(Yield >8 & Sowing_Method=="Mecanizado")
#usando coma sale exactamente lo mismo
crop_data %>% filter(Yield >8 , Sowing_Method=="Mecanizado")
#Ordenar base de datos (arrange)
crop_data%>% arrange(Yield)
#descendiente
crop_data %>% arrange(desc(Yield))
#descendiente priorizando otro valor
crop_data %>% arrange(Sowing_Method, desc(Yield))
#Seleccionar algunas de las columnas de tibble
crop_data %>% select(Cultivar,Yield)
head(crop_data)
crop_data %>% select(Cultivar:Yield)
#ordenar las columnas en funcion a un nombre y con everyting acomoda el resto
crop_data %>% select(Sowing_Method, Former_Crop, everything())
#cambiar el nombre de una columna
crop_data %>% select(Sowing_Method, Cultivo_Anterior = Former_Crop, everything())
#otra funcion, primero enl nuevo nombre y luego el anterior
crop_data %>% rename(Rendimiento = Yield, Fecha_siembra = Planting_Date)
#cear una nueva columna dentro de la base de datos
crop_data <- crop_data %>% mutate(Dataset = "Maiz_cordoba")
crop_data <- crop_data %>% mutate(YieldAvg = mean(Yield))
crop_data
#Leer datos cultico utiloizando csv
crop_data <-read.csv2("Datos/Maize_Cordova_Crop.csv", stringsAsFactors = T)
summary(crop_data)
crop_data
crop_data <- tibble(crop_data)
crop_data
is(crop_data)
#version transpuesta (se parece a str en dataframe)
glimpse(crop_data)
#filtrar en base a una condicion (filter)
crop_data[crop_data$Yield>8,]
?filter
filter(crop_data, Yield>8)
crop_data%>%filter(Yield >8) %>% summary()
#debe ir con doble =
crop_data %>% filter(Yield >8 & Sowing_Method=="Mecanizado")
#usando coma sale exactamente lo mismo
crop_data %>% filter(Yield >8 , Sowing_Method=="Mecanizado")
#Ordenar base de datos (arrange)
crop_data%>% arrange(Yield)
#descendiente
crop_data %>% arrange(desc(Yield))
filter(crop_data, Yield>8)
crop_data%>%filter(Yield >8) %>% summary()
#debe ir con doble =
crop_data %>% filter(Yield >8 & Sowing_Method=="Mecanizado")
#usando coma sale exactamente lo mismo
crop_data %>% filter(Yield >8 , Sowing_Method=="Mecanizado")
#Ordenar base de datos (arrange)
crop_data%>% arrange(Yield)
#descendiente
crop_data %>% arrange(desc(Yield))
#descendiente priorizando otro valor
crop_data %>% arrange(Sowing_Method, desc(Yield))
#Seleccionar algunas de las columnas de tibble
crop_data %>% select(Cultivar,Yield)
head(crop_data)
crop_data %>% select(Cultivar:Yield)
#ordenar las columnas en funcion a un nombre y con everyting acomoda el resto
crop_data %>% select(Sowing_Method, Former_Crop, everything())
#cambiar el nombre de una columna
crop_data %>% select(Sowing_Method, Cultivo_Anterior = Former_Crop, everything())
#otra funcion, primero enl nuevo nombre y luego el anterior
crop_data %>% rename(Rendimiento = Yield, Fecha_siembra = Planting_Date)
#cear una nueva columna dentro de la base de datos
crop_data <- crop_data %>% mutate(Dataset = "Maiz_cordoba")
crop_data
crop_data <- crop_data %>% mutate(YieldAvg = mean(Yield))
is(crop_data$Planting_Date)
?as.Date
as.Date(crop_data$Planting_Date,"%m/%d/%Y")
is(as.Date(crop_data$Planting_Date,"%m/%d/%Y"))
crop_data <- crop_data %>% mutate(Planting_Date =as.Date(Planting_Date,"%m/%d/%Y"),
Harvest_Date = as.Date(Harvest_Date,"%m/%d/%Y"))
summary(crop_data)
#
crop_data <- crop_data %>% mutate(Length_Cycle = Harvest_Date-Planting_Date)
crop_data
#
crop_data <- crop_data %>% mutate(Length_Cycle = as.numeric(Harvest_Date-Planting_Date))
crop_data
#convirtiendo los rdtos a numericos
crop_data <- crop_data %>% mutate(Rendimiento = as.numeric(Yield))
crop_data
#convirtiendo los rdtos a numericos
crop_data <- crop_data %>% mutate(Rendimiento = as.double(Yield))
crop_data
"Datos/eventos_de_platano.csv" %>% read.csv2(stringsAsFactors = 1) %>%summary()
datos_platano <- "Datos/eventos_de_platano.csv" %>% read.csv(stringsAsFactors = T)
datos_platano %>% head()
datos_platano %>% ggplot(aes(x=NO_ARBOLES, y=AREA_UM)) + geom_point() +
theme_bw()
ggsave("Resultados/plot_area_arboles.png")
library(tidyr)
library(dplyr)
library(ggplot2)
#Leer datos cultico utiloizando csv
crop_data <-read.csv2("Datos/Maize_Cordova_Crop.csv", stringsAsFactors = T)
#Leer datos cultico utiloizando csv
crop_data <-read.csv("Datos/Maize_Cordova_Crop.csv", stringsAsFactors = T)
summary(crop_data)
crop_data
crop_data <- tibble(crop_data)
crop_data
is(crop_data)
#version transpuesta (se parece a str en dataframe)
glimpse(crop_data)
#filtrar en base a una condicion (filter)
crop_data[crop_data$Yield>8,]
?filter
#Leer datos cultico utiloizando csv
crop_data <-read.csv("Datos/Maize_Cordova_Crop_2.csv", stringsAsFactors = T)
summary(crop_data)
crop_data
crop_data <- tibble(crop_data)
crop_data
is(crop_data)
#version transpuesta (se parece a str en dataframe)
glimpse(crop_data)
#filtrar en base a una condicion (filter)
crop_data[crop_data$Yield>8,]
?filter
filter(crop_data, Yield>8)
crop_data%>%filter(Yield >8) %>% summary()
#debe ir con doble =
crop_data %>% filter(Yield >8 & Sowing_Method=="Mecanizado")
#usando coma sale exactamente lo mismo
crop_data %>% filter(Yield >8 , Sowing_Method=="Mecanizado")
#Ordenar base de datos (arrange)
crop_data%>% arrange(Yield)
#descendiente
crop_data %>% arrange(desc(Yield))
#descendiente priorizando otro valor
crop_data %>% arrange(Sowing_Method, desc(Yield))
#Seleccionar algunas de las columnas de tibble
crop_data %>% select(Cultivar,Yield)
head(crop_data)
crop_data %>% select(Cultivar:Yield)
#ordenar las columnas en funcion a un nombre y con everyting acomoda el resto
crop_data %>% select(Sowing_Method, Former_Crop, everything())
#cambiar el nombre de una columna
crop_data %>% select(Sowing_Method, Cultivo_Anterior = Former_Crop, everything())
#otra funcion, primero enl nuevo nombre y luego el anterior
crop_data %>% rename(Rendimiento = Yield, Fecha_siembra = Planting_Date)
#cear una nueva columna dentro de la base de datos
crop_data <- crop_data %>% mutate(Dataset = "Maiz_cordoba")
crop_data
crop_data <- crop_data %>% mutate(YieldAvg = mean(Yield))
is(crop_data$Planting_Date)
#cambiar fechas a su formato
?as.Date
is(as.Date(crop_data$Planting_Date,"%m/%d/%Y"))
crop_data <- crop_data %>% mutate(Planting_Date =as.Date(Planting_Date,"%m/%d/%Y"),
Harvest_Date = as.Date(Harvest_Date,"%m/%d/%Y"))
summary(crop_data)
#calculandeo los dias de ciclo del cultivo
crop_data <- crop_data %>% mutate(Length_Cycle = as.numeric(Harvest_Date-Planting_Date))
crop_data
#Leer datos cultico utiloizando csv
crop_data <-read.csv("Datos/Maize_Cordova_Crop_2.csv", stringsAsFactors = T)
summary(crop_data)
crop_data
crop_data <- tibble(crop_data)
crop_data
is(crop_data)
#version transpuesta (se parece a str en dataframe)
glimpse(crop_data)
#filtrar en base a una condicion (filter)
crop_data[crop_data$Yield>8,]
?filter
filter(crop_data, Yield>8)
crop_data%>%filter(Yield >8) %>% summary()
#debe ir con doble =
crop_data %>% filter(Yield >8 & Sowing_Method=="Mecanizado")
#usando coma sale exactamente lo mismo
crop_data %>% filter(Yield >8 , Sowing_Method=="Mecanizado")
#Ordenar base de datos (arrange)
crop_data%>% arrange(Yield)
#descendiente
crop_data %>% arrange(desc(Yield))
#descendiente priorizando otro valor
crop_data %>% arrange(Sowing_Method, desc(Yield))
#Seleccionar algunas de las columnas de tibble
crop_data %>% select(Cultivar,Yield)
head(crop_data)
crop_data %>% select(Cultivar:Yield)
#ordenar las columnas en funcion a un nombre y con everyting acomoda el resto
crop_data %>% select(Sowing_Method, Former_Crop, everything())
#cambiar el nombre de una columna
crop_data %>% select(Sowing_Method, Cultivo_Anterior = Former_Crop, everything())
#otra funcion, primero enl nuevo nombre y luego el anterior
crop_data %>% rename(Rendimiento = Yield, Fecha_siembra = Planting_Date)
#cear una nueva columna dentro de la base de datos
crop_data <- crop_data %>% mutate(Dataset = "Maiz_cordoba")
crop_data
crop_data <- crop_data %>% mutate(YieldAvg = mean(Yield))
is(crop_data$Planting_Date)
#cambiar fechas a su formato
?as.Date
is(as.Date(crop_data$Planting_Date,"%m/%d/%Y"))
crop_data <- crop_data %>% mutate(Planting_Date =as.Date(Planting_Date,"%m/%d/%Y"),
Harvest_Date = as.Date(Harvest_Date,"%m/%d/%Y"))
summary(crop_data)
#calculandeo los dias de ciclo del cultivo
crop_data <- crop_data %>% mutate(Length_Cycle = as.numeric(Harvest_Date-Planting_Date))
crop_data
tapply(crop_data$Yield,crop_data$Sowing_Method, mean)
crop_data <- crop_data %>% group_by(Sowing_Method)
crop_data
crop_data %>% summarise(promedioY=mean(Yield), maxY=max(Yield),
sdY=sd(Yield), promedioLC=mean(Length_Cycle))
crop_data %>% summarise(promedioY=mean(Yield, na.rm=T), maxY=max(Yield, na.rm=T),
sdY=sd(Yield, na.rm=T), promedioLC=mean(Length_Cycle, na.rm=T))
crop_data <- crop_data %>% group_by(Sowing_Method, na.rm=T)
crop_data %>% summarise(promedioY=mean(Yield, na.rm=T), maxY=max(Yield, na.rm=T),
sdY=sd(Yield, na.rm=T), promedioLC=mean(Length_Cycle, na.rm=T))
crop_data %>% group_by(Sowing_Method, Cultivar) %>% summarise(
Avg_Yield=mean(Yield,na.rm=T), Avg_LC = mean(Length_Cycle,na.rm=T), n=n()
)
crop_data %>% group_by(Sowing_Method, Cultivar) %>% summarise(
Avg_Yield=mean(Yield), Avg_LC = mean(Length_Cycle), n=n()
)
#agregado
agregado
#n para contar datos
agregado<-
crop_data %>% group_by(Sowing_Method, Cultivar) %>% summarise(
Avg_Yield=mean(Yield), Avg_LC = mean(Length_Cycle), n=n()
)
#agregado
agregado
agregado %>% arrange(desc(n))
#separar
'separate'
#separar
?separate
#separar
?separate
df %>% separate(x, c("A", "B"))
df <- data.frame(x = c("x", "x y", "x y z", NA))
df %>% separate(x, c("a", "b"))
df <- data.frame(x = c("x", "x y", "x y z", NA))
df
df %>% separate(x, c("a", "b"))
crop_data %>% mutate(Fecha=as.character(Harvest_Date))
crop_data %>% mutate(Fecha=as.character(Harvest_Date))%>%
separate(Fecha, c("Anio","Mes","Dia"), sep="-")
crop_data2 <-crop_data %>% mutate(Fecha=as.character(Harvest_Date))%>%
separate(Fecha, c("Anio","Mes","Dia"), sep="-")
crop_data2
summary(crop_data2)
# 1. utilizar mutate para convertir el año en numerico
crop_data2 <- crop_data2 %>% mutate(Anio = as.numeric(Anio))
summary(crop_data2)
# 2. filtrar os registros desde 2015 en adelante
fcrop_data2 <- filter (Anio>2015)
# 2. filtrar os registros desde 2015 en adelante
fcrop_data2 <- crop_data2 %>% filter (Anio >= 2015)
summary(fcrop_data2)
fcrop_data2 %>% summarise(promedioY=mean(Yield, na.rm=T),
medianaY=median(Yield, na.rm=T))
fcrop_data2 <- fcrop_data2 %>% group_by(Former_Crop)%>%
summarise(promedioY=mean(Yield, na.rm=T),
medianaY=median(Yield, na.rm=T))
fcrop_data2
fcrop_data2 %>% arrange(promedioY)
write.csv(fcrop_data2,"Resultados/agregado.csv")
?pivot_wider
?pivot_wider
#estructurar bases de datos
#Joseph rodriguez
#3-8-2021
library(ggplot2)
library(dplyr)
library(tidyr)
?pivot_wider
#reemplazar errores en la base de datos
install.packages("strings")
library(strings)
#reemplazar errores en la base de datos
library(stringr)
x <- c("why", "video", "cross", "extra", "deal", "authority")
x <- c("why", "video", "cross", "extra", "deal", "authority")
str_replace(x,"e","?")
fruits <- c("one apple", "two pears", "three bananas")
fruits
str_replace_all(fruits, "[aeiou]", "-")
fruits <- c("one apple", "two pears", "three bananas")
fruits
> str_replace_all(fruits, " ", "-")
tr_replace_all(fruits, " ", "-")
str_replace_all(fruits, " ", "-")
?str_to_upper
library(dplyr)
crop_data <- tibble (read.csv("Datos/Maize_Cordova_Crop_2.csv"))
crop_data <- tibble (read.csv("Datos/Maize_Cordova_Crop_2.csv"))
soil_data <- tibble (read.csv("Datos/Soil_Data.csv"))
crop_data ; soil_data
crop_data <- tibble (read.csv("Datos/Maize_Cordova_Crop_2.csv"))
soil_data <- tibble (read.csv("Datos/Soil_Data.csv"))
crop_data ; soil_data
alldata <- cop_data %>% left_join(soil_data, by = "ID")
alldata <- crop_data %>% left_join(soil_data, by = "ID")
alldata
summary(alldata)
soil_data_low_OM
soil_data_low_OM <- soil_data %>% filter(Organic_Matter_Content =="BAJA")
soil_data_low_OM
crop_data %>% left_join(soil_data_low_OM, by(c="ID"="ID"))
crop_data %>% left_join(soil_data_low_OM, by=c("ID"="ID"))
crop_data %>% inner_join(soil_data_low_OM, by="ID")
inner_crop <- crop_data %>% inner_join(soil_data_low_OM, by="ID")
inner_crop
crop_data %>% right_join(soil_data_low_OM, by="ID")
rigth_crop <- crop_data %>% right_join(soil_data_low_OM, by="ID")
crop_data %>% semi_join(soil_data_low_OM, by = "ID")
#band members y band instruments
band_members
band_instruments
band_members %>% full_join(band_instruments2, by=c("name", "artist"))
band_instruments2
band_members %>% full_join(band_instruments2, by=c("name" = "artist"))
